syntax = "proto3";
service PumpkinDB{
    rpc Greet(GreetRequest) returns (GreetResponse) {}
    rpc Get(GetRequest) returns (ValueResponse) {}
    rpc Put(PutRequest) returns (ValueResponse) {}
}

service Raft{
    rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
}

service Monitor{
    rpc SendStatus(Status) returns(MonitorResponse);
}

message GreetRequest{
    string clientId = 1;
}

message GreetResponse {
    string status = 1;
    string msg = 2;
}

message GetRequest{
    string clientId = 1;
    uint64 commandId = 2;
    string key = 3;
}

message ValueResponse {
    string value = 1;
    uint32 term = 2;
    uint64 logIndex = 3;
}

message PutRequest {
    string clientId = 1;
    uint64 commandId = 2;
    string key = 3;
    string value = 4;
}

message RequestVoteRequest{
    uint32 term = 1;
    string candidateId = 2;
    uint64 lastLogIndex = 3;
    uint32 lastLogTerm = 4;
}

message RequestVoteResponse {
    uint32 term = 1;
    bool voteGranted = 2;
}

message Entry {
    string clientId = 1;
    uint64 commandId = 2;
    string operation = 3;
    string key = 4;
    string value1 = 5;
    string value2 = 6;
}

message LogEntry{
    uint32 term = 1;
    uint64 logIndex = 2;
    Entry command = 3;
}


message AppendEntriesRequest {
    uint32 term = 1;
    string leaderId = 2;
    uint64 prevLogIndex = 3;
    uint32 prevLogTerm = 4;
    uint64 leaderCommit = 5;
    repeated LogEntry entries = 6;
}

message AppendEntriesResponse {
    uint32 term = 1;
    bool success = 2;
}

message Status{
    string nodeId = 7;
    string leaderId = 1;
    string voteFor = 2;
    uint32 term = 3;
    uint64 commitIndex = 4;
    uint64 lastApplied = 5;
    uint64 lastLogIndex = 6;
}

message MonitorResponse {
    bool success = 1;
}